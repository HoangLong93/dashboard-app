{"version":3,"sources":["apis/index.js","components/dashboard/SideBar.js","store/actions/types.js","store/actions/index.js","components/visualisations/ResponsiveHistogramChart.js","components/dashboard/Dashboard.js","components/Header.js","components/App.js","store/reducers/filterOptionsReducer.js","store/reducers/userSelected.js","store/reducers/rootReducer.js","store/reducers/applicationDataReducer.js","index.js"],"names":["axios","create","baseURL","window","location","origin","SideBar","value","fieldName","this","props","fetchDataSource","setFilterBuildName","setFilterBuildVer","_this","_this$props","idList","buildNameList","buildVerList","idListOptions","map","source","index","react_default","a","createElement","key","appID","buildNameListOptions","build","buildName","buildVerListOptions","buildVer","className","style","width","defaultValue","id","onChange","ev","handleChange","target","Component","connect","state","Object","values","filterOptions","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","response","wrap","_context2","prev","next","datasource","get","concat","sent","type","payload","data","stop","_x2","apply","arguments","_ref5","_callee5","_context5","_x5","_ref7","_callee7","_context7","_x7","ResponsiveHistogram","withParentSize","_ref","parentWidth","parentHeight","rest","objectWithoutProperties","Histogram","assign","height","ResponsiveHistogramChart","ariaLabel","orientation","cumulative","normalized","binCount","valueAccessor","datum","binType","margin","top","right","bottom","left","renderTooltip","event","color","bin0","bin1","count","density","BarSeries","animated","rawData","showDensitySeries","DensitySeries","stroke","showArea","smoothing","kernel","XAxis","label","xLabel","YAxis","Dashboard","fetchIdList","getBuildNameList","getBuildVerList","getApplicationFields","userSelected","applicationData","selectedDataSourceDetails","selectedBuildName","selectedBuildVer","sendingRateByAppID","filter","x","meanSendingRateKbps","parseInt","parseFloat","length","mediaTypeByAppID","mediaType","toString","overallSendingRate","dashboard_SideBar","borderRight","visualisations_ResponsiveHistogramChart","_callee","_context","_x","_ref3","_callee3","_context3","method","url","fields","_x3","_ref4","_callee4","_context4","_x4","_ref6","_callee6","_context6","_x6","Header","App","components_Header","BrowserRouter","Switch","Route","exact","path","component","initialState","rootReducer","combineReducers","undefined","action","objectSpread","_","mapKeys","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.90e95772.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: window.location.origin\r\n});","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    fetchDataSource,\r\n    setFilterBuildName,\r\n    setFilterBuildVer,\r\n  } from '../../store/actions';\r\nimport { FETCH_DATA_SOURCE, SET_BUILDNAME_FILTER, SET_BUILDVER_FILTER } from '../../store/actions/types';\r\nclass SideBar extends Component {\r\n    handleChange(value, fieldName) {\r\n      // fetch new data source base on selected appID\r\n      if (fieldName === FETCH_DATA_SOURCE) {\r\n        this.props.fetchDataSource(value);\r\n      }\r\n      // set filter on buildName\r\n      if (fieldName === SET_BUILDNAME_FILTER) {\r\n        this.props.setFilterBuildName(value);\r\n      }\r\n      // set filter on buildVer\r\n      if (fieldName === SET_BUILDVER_FILTER) {\r\n        this.props.setFilterBuildVer(value);\r\n      }\r\n    }\r\n\r\n    render() {\r\n        const { idList, buildNameList, buildVerList } = this.props;\r\n        const idListOptions = idList.map((source, index) => {\r\n          return <option key={index} value={source.appID}>{source.appID}</option>;\r\n        });\r\n        const buildNameListOptions = buildNameList.map((build, index) => {\r\n          return <option key={index} value={build.buildName}>{build.buildName}</option>;\r\n        });\r\n        const buildVerListOptions = buildVerList.map((build, index) => {\r\n          return <option key={index} value={build.buildVer}>{build.buildVer}</option>;\r\n        });\r\n        return (\r\n            <div className=\"four wide column\">\r\n                <div className=\"ui secondary vertical pointing fluid form\" style={{ width: '300px' }}>\r\n                    <div className=\"field\">\r\n                        <label>Select Source Id</label>\r\n                        <select defaultValue=\"default\" id=\"selectSource\"\r\n                            onChange={(ev) => this.handleChange(ev.target.value, FETCH_DATA_SOURCE)}>\r\n                            <option value=\"default\">Select Source ID</option>\r\n                            {idListOptions}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Select Build</label>\r\n                        <select defaultValue=\"default\" id=\"selectBuildName\"\r\n                            onChange={(ev) => this.handleChange(ev.target.value, SET_BUILDNAME_FILTER)}>\r\n                            <option value=\"default\">Select Build</option>\r\n                            {buildNameListOptions}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Select Build Version</label>\r\n                        <select defaultValue=\"default\" id=\"selectBuildVer\"\r\n                            onChange={(ev) => this.handleChange(ev.target.value, SET_BUILDVER_FILTER)}>\r\n                            <option value=\"default\">Select Build</option>\r\n                            {buildVerListOptions}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    idList: Object.values(state.filterOptions.idList),\r\n    buildNameList: Object.values(state.filterOptions.buildNameList),\r\n    buildVerList: Object.values(state.filterOptions.buildVerList),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n      fetchDataSource,\r\n      setFilterBuildName,\r\n      setFilterBuildVer,\r\n    }\r\n  )(SideBar);\r\n","export const FETCH_ID_LIST = 'FETCH_ID_LIST';\r\nexport const FETCH_DATA_SOURCE = 'FETCH_DATA_SOURCE';\r\nexport const GET_APPLICATION_DATA_FIELDS = 'GET_APPLICATION_DATA_FIELDS';\r\nexport const GET_BUILDNAME_LIST = 'GET_BUILDNAME_LIST';\r\nexport const SET_BUILDNAME_FILTER = 'SET_BUILDNAME_FILTER';\r\nexport const GET_BUILDVER_LIST = 'GET_BUILDVER_LIST';\r\nexport const SET_BUILDVER_FILTER = 'SET_BUILDVER_FILTER';","import datasource from '../../apis';\r\nimport {\r\n    FETCH_ID_LIST,\r\n    FETCH_DATA_SOURCE,\r\n    GET_APPLICATION_DATA_FIELDS,\r\n    GET_BUILDNAME_LIST,\r\n    SET_BUILDNAME_FILTER,\r\n    GET_BUILDVER_LIST,\r\n    SET_BUILDVER_FILTER,\r\n} from './types';\r\n\r\n// fetch all appids\r\nexport const fetchIdList = () => async dispatch => {\r\n    const response = await datasource.get('/app');\r\n\r\n    dispatch({ type: FETCH_ID_LIST, payload: response.data });\r\n};\r\n\r\n// fetch data by appid\r\nexport const fetchDataSource = id => async dispatch => {\r\n    const response = await datasource.get(`/app/${id}`);\r\n\r\n    dispatch({ type: FETCH_DATA_SOURCE, payload: response.data });\r\n};\r\n\r\n// get set of fields from all records in the db\r\nexport const getApplicationFields = () => async dispatch => {\r\n    const response = await datasource({\r\n        method: 'post',\r\n        url: '/appData',\r\n        data: { \"fields\": ['meanSendingRateKbps', 'buildName', 'buildVer'] }\r\n    });\r\n\r\n    dispatch({ type: GET_APPLICATION_DATA_FIELDS, payload: response.data });\r\n};\r\n\r\n// get buildName list\r\nexport const getBuildNameList = () => async dispatch => {\r\n    const response = await datasource.get(`/buildName/`);\r\n\r\n    dispatch({ type: GET_BUILDNAME_LIST, payload: response.data });\r\n};\r\n\r\n// filter result by buildName\r\nexport const setFilterBuildName = (buildName) => async dispatch => {\r\n    dispatch({ type: SET_BUILDNAME_FILTER, payload: buildName });\r\n};\r\n\r\n// get buildVer list\r\nexport const getBuildVerList = () => async dispatch => {\r\n    const response = await datasource.get(`/buildVer/`);\r\n\r\n    dispatch({ type: GET_BUILDVER_LIST, payload: response.data });\r\n};\r\n\r\n// filter result by buildVer\r\nexport const setFilterBuildVer = (buildVer) => async dispatch => {\r\n    dispatch({ type: SET_BUILDVER_FILTER, payload: buildVer });\r\n};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Histogram, DensitySeries, BarSeries, withParentSize, XAxis, YAxis } from '@data-ui/histogram';\r\n\r\nconst ResponsiveHistogram = withParentSize(({ parentWidth, parentHeight, ...rest }) => (\r\n  <Histogram\r\n    width={parentWidth}\r\n    height={parentHeight * 0.95}\r\n    {...rest}\r\n  />\r\n));\r\n\r\nclass ResponsiveHistogramChart extends Component {\r\n  render() {\r\n    return (\r\n      <ResponsiveHistogram\r\n        ariaLabel=\"My histogram of ...\"\r\n        orientation=\"vertical\"\r\n        cumulative={false}\r\n        normalized={false}\r\n        binCount={10}\r\n        valueAccessor={datum => datum}\r\n        binType={this.props.binType}\r\n        margin={{ top: 32, right: 32, bottom: 64, left: 50 }}\r\n        renderTooltip={({ event, datum, data, color }) => (\r\n          <div>\r\n            <strong style={{ color }}>{datum.bin0} to {datum.bin1}</strong>\r\n            <div><strong>count </strong>{datum.count}</div>\r\n            <div><strong>cumulative </strong>{datum.cumulative}</div>\r\n            <div><strong>density </strong>{datum.density}</div>\r\n          </div>\r\n        )}\r\n      >\r\n        <BarSeries\r\n          animated\r\n          rawData={this.props.data}\r\n        />\r\n\r\n        {this.props.showDensitySeries ?\r\n        <DensitySeries\r\n          stroke=\"#e64980\"\r\n          showArea={false}\r\n          smoothing={0.01}\r\n          kernel=\"parabolic\"\r\n          rawData={this.props.data}\r\n        />\r\n        : null}\r\n        <XAxis label={this.props.xLabel} />\r\n        <YAxis />\r\n      </ResponsiveHistogram>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nResponsiveHistogramChart.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  binType: PropTypes.string.isRequired,\r\n  xLabel: PropTypes.string,\r\n  showDensitySeries: PropTypes.bool.isRequired,\r\n}\r\nexport default ResponsiveHistogramChart;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  fetchIdList,\r\n  getApplicationFields,\r\n  getBuildNameList,\r\n  getBuildVerList,\r\n} from '../../store/actions';\r\nimport SideBar from './SideBar';\r\nimport ResponsiveHistogramChart from '../visualisations/ResponsiveHistogramChart';\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    // fetch application data\r\n    this.props.fetchIdList();\r\n    this.props.getBuildNameList();\r\n    this.props.getBuildVerList();\r\n    this.props.getApplicationFields();\r\n  }\r\n\r\n  render() {\r\n    const { userSelected, applicationData } = this.props;\r\n    const { selectedDataSourceDetails, selectedBuildName, selectedBuildVer } = userSelected;\r\n\r\n    // sending rate by selected appID\r\n    let sendingRateByAppID = selectedDataSourceDetails\r\n      // filter out record with empty or 0 meanSendingRateKbps or with too large meanSendingRateKbps which cause the graph to look weird\r\n      .filter(x => x.meanSendingRateKbps !== \"\" && parseInt(x.meanSendingRateKbps, 10) !== 0 && x.meanSendingRateKbps < 10000)\r\n      // filter by buildName if buildName filter is set\r\n      .filter(x => (selectedBuildName && selectedBuildName !== 'default') ? x.buildName === selectedBuildName : true)\r\n      // filter by buildVer if buildVer filter is set\r\n      .filter(x => (selectedBuildVer && selectedBuildVer !== 'default') ? x.buildVer === selectedBuildVer : true)\r\n      // map to chart data DTO\r\n      .map(x => parseFloat(x.meanSendingRateKbps));\r\n    // parse default value if empty\r\n    if (!sendingRateByAppID.length) { sendingRateByAppID = [0] }\r\n\r\n    // media type by selected appID\r\n    let mediaTypeByAppID = selectedDataSourceDetails\r\n      // filter out record with empty mediaType which cause the graph to look weird\r\n      .filter(x => x.mediaType !== \"\")\r\n      // filter by buildName if buildName filter is set\r\n      .filter(x => (selectedBuildName && selectedBuildName !== 'default') ? x.buildName === selectedBuildName : true)\r\n      // filter by buildVer if buildVer filter is set\r\n      .filter(x => (selectedBuildVer && selectedBuildVer !== 'default') ? x.buildVer === selectedBuildVer : true)\r\n      // map to chart data DTO\r\n      .map(x => x.mediaType.toString());\r\n    // parse default value if empty\r\n    if (!mediaTypeByAppID.length) { mediaTypeByAppID = [\"0\"] }\r\n    \r\n    // sending rate accross all appIDs\r\n    let overallSendingRate = applicationData\r\n      // filter by buildName if buildName filter is set\r\n      .filter(x => (selectedBuildName && selectedBuildName !== 'default') ? x.buildName === selectedBuildName : true)\r\n      // filter by buildVer if buildVer filter is set\r\n      .filter(x => (selectedBuildVer && selectedBuildVer !== 'default') ? x.buildVer === selectedBuildVer : true)\r\n      // map to chart data DTO\r\n      .map(x => parseFloat(x.meanSendingRateKbps))\r\n      // filter out record with empty or 0 meanSendingRateKbps or with too large meanSendingRateKbps which cause the graph to look weird\r\n      .filter(x => x < 10000 && x !== 0);\r\n    // parse default value if empty\r\n    if (!overallSendingRate.length) { overallSendingRate = [0] }\r\n    return (\r\n      <div className=\"ui grid\">\r\n        <SideBar />\r\n        <div className=\"twelve wide column\">\r\n          <div className=\"ui segment grid\">\r\n            <div className=\"ui ten wide column\" style={{ height: '400px', borderRight: '1px dotted black' }}>\r\n              <h2 className=\"ui header\">Sending rate per AppID</h2>\r\n              <ResponsiveHistogramChart data={sendingRateByAppID} binType='numeric' xLabel=\"Sending rate(Kbps)\" showDensitySeries={true} />\r\n            </div>\r\n            <div className=\"ui six wide column\" style={{ height: '400px' }}>\r\n              <h2 className=\"ui header\">Media Type Distribution</h2>\r\n              <ResponsiveHistogramChart data={mediaTypeByAppID} binType='categorical' xLabel=\"Media Type\" showDensitySeries={false} />\r\n            </div>\r\n          </div>\r\n          <div className=\"ui divider\"></div>\r\n          <div className=\"ui segment\">\r\n            <div style={{ width: '80%', height: '450px' }}>\r\n              <h2 className=\"ui header\">Sending rate accross all appIDs</h2>\r\n              <ResponsiveHistogramChart data={overallSendingRate} binType='numeric' xLabel=\"Sending rate(Kbps)\" showDensitySeries={true} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userSelected: state.userSelected,\r\n    applicationData: state.applicationData.data,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    fetchIdList,\r\n    getApplicationFields,\r\n    getBuildNameList,\r\n    getBuildVerList,\r\n  }\r\n)(Dashboard);\r\n","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"ui secondary menu\">\r\n      <div className=\"header item\">Logo</div>\r\n      <div className=\"active item\">\r\n        Home\r\n          </div>\r\n      <div className=\"right menu\">\r\n        <div className=\"ui item\">\r\n          Settings\r\n            </div>\r\n        <div className=\"ui item\">\r\n          Logout\r\n            </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Dashboard from './dashboard/Dashboard';\r\nimport Header from './Header';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <Header />\r\n      <div className=\"ui divider\"></div>\r\n      <BrowserRouter>\r\n        <div>\r\n          <Switch>\r\n            <Route exact path='/' component={Dashboard} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import _ from 'lodash';\r\nimport {\r\n    FETCH_ID_LIST,\r\n    GET_BUILDNAME_LIST,\r\n    GET_BUILDVER_LIST,\r\n} from '../actions/types';\r\n\r\nconst initialState = { \r\n    idList: {},\r\n    buildNameList: {},\r\n    buildVerList: {},\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_ID_LIST:\r\n          return { ...state, idList: _.mapKeys(action.payload, 'appID') };\r\n        case GET_BUILDNAME_LIST:\r\n            return { ...state, buildNameList: _.mapKeys(action.payload, 'buildName') };\r\n        case GET_BUILDVER_LIST:\r\n            return { ...state, buildVerList: _.mapKeys(action.payload, 'buildVer') };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    FETCH_DATA_SOURCE,\r\n    SET_BUILDNAME_FILTER,\r\n    SET_BUILDVER_FILTER,\r\n} from '../actions/types';\r\n\r\nconst initialState = { \r\n    selectedDataSourceDetails: [],\r\n    selectedBuildName: \"\",\r\n    selectedBuildVer: \"\",\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_DATA_SOURCE:\r\n            return { ...state, selectedDataSourceDetails: action.payload };\r\n        case SET_BUILDNAME_FILTER:\r\n            return { ...state, selectedBuildName: action.payload };\r\n        case SET_BUILDVER_FILTER:\r\n            return { ...state, selectedBuildVer: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux'\r\nimport filterOptionsReducer from './filterOptionsReducer';\r\nimport userSelectedReducer from './userSelected';\r\nimport applicationDataReducer from './applicationDataReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    filterOptions: filterOptionsReducer,\r\n    userSelected: userSelectedReducer,\r\n    applicationData: applicationDataReducer,\r\n});\r\n\r\nexport default rootReducer\r\n\r\n// the key name will be the data property on the state object","import {\r\n    GET_APPLICATION_DATA_FIELDS,\r\n} from '../actions/types';\r\n\r\nexport default (state = {data: []}, action) => {\r\n    switch (action.type) {\r\n        case GET_APPLICATION_DATA_FIELDS:\r\n            return { ...state, data: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport reduxThunk from 'redux-thunk'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}